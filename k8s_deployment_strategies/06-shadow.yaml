apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-stable
spec:
  replicas: 2
  selector: { matchLabels: { app: web, track: stable } }
  template:
    metadata: { labels: { app: web, track: stable } }
    spec:
      containers:
        - name: nginx
          image: nginx:stable-alpine
          ports: [{ containerPort: 80 }]
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
        - name: www
          configMap: { name: web-v1 }
---
apiVersion: v1
kind: Service
metadata:
  name: web-stable
spec:
  selector: { app: web, track: stable }
  ports: [{ port: 80, targetPort: 80 }]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-shadow
spec:
  replicas: 2
  selector: { matchLabels: { app: web, track: shadow } }
  template:
    metadata: { labels: { app: web, track: shadow } }
    spec:
      containers:
        - name: nginx
          image: nginx:stable-alpine
          ports: [{ containerPort: 80 }]
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
        - name: www
          configMap: { name: web-v2 }
---
apiVersion: v1
kind: Service
metadata:
  name: web-shadow
spec:
  selector: { app: web, track: shadow }
  ports: [{ port: 80, targetPort: 80 }]
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-shadow-ing
  annotations:
    nginx.ingress.kubernetes.io/mirror-target: "http://web-shadow.default.svc.cluster.local$request_uri"
    nginx.ingress.kubernetes.io/mirror-host: "localhost"
    nginx.ingress.kubernetes.io/mirror-percentage: "100"
spec:
  ingressClassName: nginx
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-stable
                port:
                  number: 80