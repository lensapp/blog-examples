apiVersion: v1
kind: ConfigMap
metadata:
  name: web-v1
data:
  index.html: |
    <html><body><h1>Hello from v1</h1></body></html>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-v2
data:
  index.html: |
    <html><body><h1>Hello from v2</h1></body></html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-v1
spec:
  replicas: 3
  selector: { matchLabels: { app: web, version: v1 } }
  template:
    metadata: { labels: { app: web, version: v1 } }
    spec:
      containers:
        - name: nginx
          image: nginx:stable-alpine
          ports: [{ containerPort: 80 }]
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
        - name: www
          configMap: { name: web-v1 }
---
apiVersion: v1
kind: Service
metadata:
  name: web-v1
spec:
  selector: { app: web, version: v1 }
  ports: [{ port: 80, targetPort: 80 }]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-v2
spec:
  replicas: 1
  selector: { matchLabels: { app: web, version: v2 } }
  template:
    metadata: { labels: { app: web, version: v2 } }
    spec:
      containers:
        - name: nginx
          image: nginx:stable-alpine
          ports: [{ containerPort: 80 }]
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
        - name: www
          configMap: { name: web-v2 }
---
apiVersion: v1
kind: Service
metadata:
  name: web-v2
spec:
  selector: { app: web, version: v2 }
  ports: [{ port: 80, targetPort: 80 }]
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-stable
  annotations: { kubernetes.io/ingress.class: "nginx" }
spec:
  ingressClassName: nginx 
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend: { service: { name: web-v1, port: { number: 80 } } }
